@page "/dashboard" 
@inject BlazorDashboardApp.Services.DashboardService DashboardService

<PageTitle>Dashboard</PageTitle>

<div class="container mt-5">
    <!-- Dashboard Header -->
    <h2 class="text-center my-4 text-primary font-weight-bold">ðŸ“Š Dashboard</h2>

    <!-- Table Section -->
    <div class="table-responsive shadow-lg rounded-lg overflow-hidden">
        <table class="table table-striped table-hover table-bordered">
            <thead class="bg-dark text-white">
                <tr>
                    <th class="font-weight-bold">ID</th>
                    <th class="font-weight-bold">Name</th>
                    <th class="font-weight-bold">Value</th>
                    <th class="font-weight-bold">Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in DashboardService.GetData())
                {
                    <tr class="text-center">
                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>@item.Value</td>
                        <td>
                            <span class="badge bg-@GetStatusClass(item.Status)">
                                @item.Status
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- JavaScript for additional interactivity -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const rows = document.querySelectorAll("table tbody tr");
        rows.forEach(row => {
            row.addEventListener("mouseover", function () {
                row.style.backgroundColor = "#f1f1f1";
            });
            row.addEventListener("mouseout", function () {
                row.style.backgroundColor = "";
            });
        });
    });
</script>

<style>
    /* Table Styling */
    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f9f9f9;
    }

    .table-hover tbody tr:hover {
        background-color: #e0e0e0 !important;
    }

    .table th {
        text-align: center;
    }

    .table td {
        vertical-align: middle;
    }

    /* Header and Section Styling */
    h2 {
        font-size: 2.5rem;
        color: #1e3a8a; /* Bootstrap primary color */
    }

    .font-weight-bold {
        font-weight: 600;
    }

    /* Badge Styling for Status */
    .badge {
        padding: 0.6rem 1.2rem;
        font-size: 1rem;
        font-weight: 500;
    }

    /* Table Styling */
    .table-bordered {
        border: 2px solid #dee2e6;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
        cursor: pointer;
    }

    /* Responsive Design */
    .container {
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Custom Styling for Table */
    .table th {
        text-align: center;
    }

    .table tbody tr td {
        text-align: center;
    }
</style>

@code {
    private string GetStatusClass(string status) => status switch
    {
        "Active" => "success",
        "Pending" => "warning",
        "Completed" => "primary",
        "Hold" => "danger",
        _ => "secondary"
    };
}
